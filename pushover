#!/bin/bash

USER=""
TOKEN=""
TITLE=""
MESSAGE=""
HTML=""
PRIORITY="0"
RETRY="60"
EXPIRE="86400"
ERROR=false
VERSION="1.0.1"

usage() {
	echo "
Usage:
	pushover [options]
Options:
	--user 		Pushover user key. REQUIRED.
	--token 	Pushover application API token. REQUIRED.
	--title 	Notification title.
	--message 	Notification message. REQUIRED.
	--html 		Enabled HTML message. Set to 1 to enable. See: https://pushover.net/api#html.
	--priority 	Message priority, see: https://pushover.net/api#priority. DEFAULT = $PRIORITY.
	--retry 	How many seconds between retries. Only applies when --priority is set to 2 (emergency). DEFAULT = $RETRY.
	--expire 	How many seconds until emergency notification retries will stop. Only applies when --priority is set to 2 (emergency). DEFAULT = $EXPIRE.
	--upgrade 	Upgrade to the latest version of Pushover CLI.
Example:
	pushover \\
	--user YOUR_USER_KEY \\
	--token YOUR_APP_TOKEN \\
	--title \"Test Notification\" \\
	--message \"Here is the notification!\"
	"
}

while [[ $# -gt 0 ]]
do
	key="$1"
	case $key in
		--token)
			TOKEN="${2:-$TOKEN}"
			shift
			shift
		;;
		--user)
			USER="${2:-$USER}"
			shift
			shift
		;;
		--title)
			TITLE="${2:-$TITLE}"
			shift
			shift
		;;
		--message)
			MESSAGE="${2:-$MESSAGE}"
			shift
			shift
		;;
		--html)
			HTML="${2:-$HTML}"
			shift
			shift
		;;
		--priority)
			PRIORITY="${2:-$PRIORITY}"
			shift
			shift
		;;
		--retry)
			RETRY="${2:-$RETRY}"
			shift
			shift
		;;
		--expire)
			EXPIRE="${2:-$EXPIRE}"
			shift
			shift
		;;
		--upgrade)
			DIR_TEMP=/opt/pushover-cli
			git clone git@github.com:aaronfagan/pushover-cli.git $DIR_TEMP > /dev/null 2>&1
			cd $DIR_TEMP
			chmod +x upgrade.sh
			bash upgrade.sh $VERSION
			cd - > /dev/null 2>&1
			rm -rf $DIR_TEMP
			exit
		;;
		--help)
			usage
			exit
		;;
		-v | --version)
			echo -e "\033[0;37m\nPushover CLI v$VERSION.\n\033[0m"
			exit
		;;
		*) 
			INVALID+=("$1")
			shift
			echo -e "\033[0;31m\nERROR:\033[0;37m Invalid arguement: $INVALID\033[0m"
			usage
			exit 1
		;;
	esac
done

if [ -z "$USER" ] || [ -z "$TOKEN" ] || [ -z "$MESSAGE" ]
then
	printf '\n'
	if [ -z "$USER" ]; then echo -e "\033[0;31mERROR:\033[0;37m --user arguement is required.\033[0m"; fi
	if [ -z "$TOKEN" ]; then echo -e "\033[0;31mERROR:\033[0;37m --token arguement is required.\033[0m"; fi
	if [ -z "$MESSAGE" ]; then echo -e "\033[0;31mERROR:\033[0;37m --message arguement is required.\033[0m"; fi
	usage
	exit 1
else
	printf '\033[0;37m'
	printf "\n> Sending notification..."
	/usr/bin/curl -s \
		-F "token=${TOKEN}" \
		-F "user=${USER}" \
		-F "title=${TITLE}" \
		-F "priority=${PRIORITY}" \
		-F "retry=${RETRY}" \
		-F "expire=${EXPIRE}" \
		-F "message=${MESSAGE}" \
		https://api.pushover.net/1/messages.json \
	| grep 'errors' > /dev/null 2>&1
	if [ $? != 0 ]; then printf "success!\n\n"; else printf "failed!\n\n"; exit 1; fi
	printf '\033[0m'
fi
